///$tab Main
SET ThousandSep='.';
SET DecimalSep=',';
SET MoneyThousandSep='.';
SET MoneyDecimalSep=',';
SET MoneyFormat='#.##0,00 €;-#.##0,00 €';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='it-IT';
SET CreateSearchIndexOnReload=1;
SET MonthNames='gen;feb;mar;apr;mag;giu;lug;ago;set;ott;nov;dic';
SET LongMonthNames='gennaio;febbraio;marzo;aprile;maggio;giugno;luglio;agosto;settembre;ottobre;novembre;dicembre';
SET DayNames='lun;mar;mer;gio;ven;sab;dom';
SET LongDayNames='lunedì;martedì;mercoledì;giovedì;venerdì;sabato;domenica';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';





///$tab Dipendenti
LOAD
    Matricola,
    Cognome,
    Nome,
    Sesso,
    Dipartimento,
    RAL,
    Data_assunzione,
    Responsabile,
    Data_nascita,
    Mansione,
    ShopID
FROM [lib://MyTestSpace:DataFiles/XYZ Dipendenti.xlsx]
(ooxml, embedded labels, table is Dipendenti);


///$tab Dipartimenti
LOAD
    IDDip,
    DescrDip
FROM [lib://MyTestSpace:DataFiles/XYZ Dipendenti.xlsx]
(ooxml, embedded labels, table is Dipartimenti);


///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','City Sales','Shop Sales','QlikData_FakeNameGenerator.com NEW';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

__countryGeoBase:
LOAD
	ISO3Code AS [__ISO3Code],
	ISO2Code AS [__ISO2Code],
	Polygon AS [__Polygon]
FROM [lib://MyTestSpace:DataFiles/countryGeo.qvd]
(qvd);

__countryAliasesBase:
LOAD
	Alias AS [__Country],
	ISO3Code AS [__ISO3Code]
FROM [lib://MyTestSpace:DataFiles/countryAliases.qvd]
(qvd);

__countryCodeIsoTwo2Polygon:
MAPPING LOAD
	__ISO2Code,
	__Polygon
RESIDENT __countryGeoBase;

__countryName2IsoThree:
MAPPING LOAD
	__Country,
	__ISO3Code
RESIDENT __countryAliasesBase;

__countryCodeIsoThree2Polygon:
MAPPING LOAD
	__ISO3Code,
	__Polygon
RESIDENT __countryGeoBase;

[City Sales]:
LOAD
	[CityID],
	[City Name] AS [Shop City - Survey City],
	[Lat] AS [City Sales.Lat],
	[Lon] AS [City Sales.Lon],
	[City Sales],
	[City Cost Of Sales],
	GeoMakePoint([Lat], [Lon]) AS [City Sales.Lon_City Sales.Lat]
 FROM [lib://MyTestSpace:DataFiles/WorkShop Map Data.xlsx]
(ooxml, embedded labels, table is [City Sales]);

[Shop Sales]:
LOAD
	[CityID],
	[ShopID] AS [Matricola-ShopID],
	[Shop Name],
	[Lat] AS [Shop Sales.Lat],
	[Lon] AS [Shop Sales.Lon],
	[Shop Sales],
	[Shop Cost Of Sales],
	[EmployeesNumber],
	[Active],
	[J] AS [Shop Sales.J],
	[K] AS [Shop Sales.K],
	[L],
	APPLYMAP( '__countryCodeIsoTwo2Polygon', UPPER([CityID]), '-') AS [Shop Sales.Shop Sales.CityID_GeoInfo],
	GeoMakePoint([Lat], [Lon]) AS [Shop Sales.Lon_Shop Sales.Lat]
 FROM [lib://MyTestSpace:DataFiles/WorkShop Map Data.xlsx]
(ooxml, embedded labels, table is [Shop Sales]);

[QlikData_FakeNameGenerator.com NEW]:
LOAD
	[Gender],
	[GivenName],
	[Surname],
	[City] AS [Shop City - Survey City],
	[ZipCode],
	[CountryFull],
	[Age],
	[Occupation],
	[Latitude],
	[Longitude],
	APPLYMAP( '__countryCodeIsoThree2Polygon', APPLYMAP( '__countryName2IsoThree', LOWER([CountryFull])), '-') AS [QlikData_FakeNameGenerator.com NEW.CountryFull_GeoInfo]
 FROM [lib://MyTestSpace:DataFiles/QlikData_FakeNameGenerator.com NEW.csv]
(txt, utf8, embedded labels, delimiter is ',', msq);

[Dipendenti_temp_a2ceb3a7-4f89-bbee-ae15-cf1657e9]:
LOAD
	[Matricola],
	[Cognome],
	[Nome],
	[Sesso],
	[Dipartimento] AS [Dipartimento-IDDip],
	[RAL],
	Date(Date#([Data_assunzione], 'M-D-YY') ) AS [Data_assunzione],
	[Responsabile],
	Date(Date#([Data_nascita], 'YYYY-MM-DD') ) AS [Data_nascita],
	[Mansione],
	[ShopID] AS [Matricola-ShopID]
RESIDENT [Dipendenti];
DROP TABLE [Dipendenti];

[Dipartimenti_temp_db916a29-7f81-cf16-bfa7-6594dc87]:
LOAD
	[IDDip] AS [Dipartimento-IDDip],
	[DescrDip]
RESIDENT [Dipartimenti];
DROP TABLE [Dipartimenti];



TAG FIELD [CityID] WITH '$geoname', '$relates_Shop Sales.Shop Sales.CityID_GeoInfo';
TAG FIELD [Shop Sales.Shop Sales.CityID_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_CityID';

TAG FIELD [CountryFull] WITH '$geoname', '$relates_QlikData_FakeNameGenerator.com NEW.CountryFull_GeoInfo';
TAG FIELD [QlikData_FakeNameGenerator.com NEW.CountryFull_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_CountryFull';

RENAME TABLE [Dipendenti_temp_a2ceb3a7-4f89-bbee-ae15-cf1657e9] to [Dipendenti];

RENAME TABLE [Dipartimenti_temp_db916a29-7f81-cf16-bfa7-6594dc87] to [Dipartimenti];

DROP TABLES __countryGeoBase, __countryAliasesBase;
[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [Data_assunzione], [Data_nascita] USING [autoCalendar] ;